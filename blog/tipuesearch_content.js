var tipuesearch = {"pages":[{"url":"./pages/about/","title":"About","text":"2016Fall 修課成員網誌","tags":"misc"},{"url":"./week-19-chun-cui-wen-zi-dang.html","title":"Week 19  純粹文字檔","text":"測試!!! 最近LEO只要一更新 近端網誌就會空白 推送遠端也是一樣結果 目前找到幾種方法要測試","tags":"Misc"},{"url":"./week-17-brython-zhuan-zhuan-zhuan.html","title":"Week 17 Brython 轉!轉!轉!","text":"轉!轉!轉!好運旺來一起來 轉!轉!轉!吉祥如意一起來 這是利用人的視覺暫留連續旋轉動畫 輸入重新繪製的程式碼時 因為稍微複雜些 一開始一直有小缺陷 不過後來還是看懂然後解決了 window.onload=function(){ brython(1); } from browser import document from browser import window from browser import timer import math canvas = document[\"onebar\"] ctx = canvas.getContext(\"2d\") # 取畫布的寬與高度 width = canvas.width height = canvas.height # 畫圓函式 def circle(x,y,r): ctx.beginPath() ctx.arc(x, y, r, 0, math.pi*2, True) ctx.fill() ctx.closePath() def line(x1, y1, x2, y2): # 以下可以利用 ctx 物件進行畫圖 # 先畫一條直線 ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 # 將畫筆移動到 (x1, y1) 座標點 ctx.moveTo(x1, y1) # 然後畫直線到 (x2, y2) 座標點 ctx.lineTo(x2, y2) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" # 實際執行畫線 ctx.stroke() ctx.closePath() line(200, 200, 200, 300) circle(200, 200, 5) x1 = 200 y1 = 200 r = 100 deg = math.pi/180 theta = 0 # 每隔特定時間, 進行動畫繪製 def animate(): global theta # 刷新畫布 ctx.clearRect(0, 0, width, height) # 逐一重新繪製直線與圓心球 x2 = x1 + r*math.cos(theta*deg) y2 = y1 + r*math.sin(theta*deg) line(x1, y1, x2, y2) # 再加一條小線段 x3 = x2 + 50*math.cos(10*theta*deg) y3 = y2 + 50*math.sin(10*theta*deg) line(x2, y2, x3, y3) circle(x1, y1, 5) theta += 1 timer.set_interval(animate, 50) 上述繪圖的程式碼如下: window.onload=function(){ brython(1); } from browser import document from browser import window from browser import timer import math canvas = document[\"onebar\"] ctx = canvas.getContext(\"2d\") # 取畫布的寬與高度 width = canvas.width height = canvas.height # 畫圓函式 def circle(x,y,r): ctx.beginPath() ctx.arc(x, y, r, 0, math.pi*2, True) ctx.fill() ctx.closePath() def line(x1, y1, x2, y2): # 以下可以利用 ctx 物件進行畫圖 # 先畫一條直線 ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 # 將畫筆移動到 (x1, y1) 座標點 ctx.moveTo(x1, y1) # 然後畫直線到 (x2, y2) 座標點 ctx.lineTo(x2, y2) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" # 實際執行畫線 ctx.stroke() ctx.closePath() line(200, 200, 200, 300) circle(200, 200, 5) x1 = 200 y1 = 200 r = 100 deg = math.pi/180 theta = 0 # 每隔特定時間, 進行動畫繪製 def animate(): global theta # 刷新畫布 ctx.clearRect(0, 0, width, height) # 逐一重新繪製直線與圓心球 x2 = x1 + r*math.cos(theta*deg) y2 = y1 + r*math.sin(theta*deg) line(x1, y1, x2, y2) # 再加一條小線段 x3 = x2 + 50*math.cos(10*theta*deg) y3 = y2 + 50*math.sin(10*theta*deg) line(x2, y2, x3, y3) circle(x1, y1, 5) theta += 1 timer.set_interval(animate, 50)","tags":"Misc"},{"url":"./week-17-brython.html","title":"Week 17 Brython","text":"這是要畫一顆圓球 並連在一條線上的繪圖 這個滿簡單的 但是圓的函式那邊還是有點看不懂 window.onload=function(){ brython(1); } from browser import document from browser import window from browser import timer import math canvas = document[\"onebar\"] ctx = canvas.getContext(\"2d\") # 畫圓函式 def circle(x,y,r): ctx.beginPath() ctx.arc(x, y, r, 0, math.pi*2, True) ctx.fill() ctx.closePath() # 以下可以利用 ctx 物件進行畫圖 # 先畫一條直線 ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 # 將畫筆移動到 (200, 200) 座標點 ctx.moveTo(200, 200) # 然後畫直線到 (200, 300) 座標點 ctx.lineTo(200, 300) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" # 實際執行畫線 ctx.stroke() ctx.closePath() circle(200, 200, 5) 上述繪圖的程式碼如下: window.onload=function(){ brython(1); } from browser import document from browser import window from browser import timer import math canvas = document[\"onebar\"] ctx = canvas.getContext(\"2d\") # 畫圓函式 def circle(x,y,r): ctx.beginPath() ctx.arc(x, y, r, 0, math.pi*2, True) ctx.fill() ctx.closePath() # 以下可以利用 ctx 物件進行畫圖 # 先畫一條直線 ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 # 將畫筆移動到 (200, 200) 座標點 ctx.moveTo(200, 200) # 然後畫直線到 (200, 300) 座標點 ctx.lineTo(200, 300) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" # 實際執行畫線 ctx.stroke() ctx.closePath() circle(200, 200, 5)","tags":"Misc"},{"url":"./week-16-cai-shu-zi-brython.html","title":"Week 16 猜數字 Brython","text":"來啊~~PK~~啊~~ 運用上次學到的創造button的程式碼 然後這次為button加點功能 先設定讓網頁自行選擇1~100的數字 然後由進到這網頁的人猜 假如猜錯就會print\"太大了\" 或 \"太小了\"的文字出來 直到猜對 還會計算你猜的數字 而這些文字要去 更多工具-->開發人員工具-->Console 查看 window.onload=function(){ brython(1); } from browser import document from browser import html #coding: utf-8 # 猜數字遊戲 import random 標準答案 = random.randint(1, 100) 你猜的數字 = int(input(\"請輸入您所猜的整數:\")) 猜測次數 = 1 while 標準答案 != 你猜的數字: if 標準答案 < 你猜的數字: print(\"太大了，再猜一次 :)加油\") else: print(\"太小了，再猜一次 :)加油\") 你猜的數字 = int(input(\"請輸入您所猜的整數:\")) 猜測次數 += 1 print(\"猜對了！總共猜了\", 猜測次數, \"次\") window.onload=function(){ brython(1); } from browser import document from browser import html #coding: utf-8 # 猜數字遊戲 import random 標準答案 = random.randint(1, 100) 你猜的數字 = int(input(\"請輸入您所猜的整數:\")) 猜測次數 = 1 while 標準答案 != 你猜的數字: if 標準答案 < 你猜的數字: print(\"太大了，再猜一次 :)加油\") else: print(\"太小了，再猜一次 :)加油\") 你猜的數字 = int(input(\"請輸入您所猜的整數:\")) 猜測次數 += 1 print(\"猜對了！總共猜了\", 猜測次數, \"次\")","tags":"Misc"},{"url":"./week-16-brython.html","title":"Week 16 Brython","text":"新年快樂 HA~HA~HA~ 運用上次學到的創造button的程式碼 然後這次為button加點功能 當按下button會列出6個數字 這次是使用大樂透基準1~49號 但會有重複數字出現 所以要再多加一個設定 window.onload=function(){ brython(1); } from browser import document from browser import html import random print_location = document[\"newyear\"] def gen_int(): num = random.randint(1, 49) # 設法將 num 列印在網頁上 #print_location = document[\"newyear\"] print_location <= num + html.BR() def lottery(e): for i in range(6): gen_int() print_location <= \"恭喜中獎!!!快去簽樂透\" + html.BR() #document[\"but1\"].bind(\"click\", gen_int) document[\"but1\"].bind(\"click\", lottery) 帶來希望與夢想的按鈕 from browser import document from browser import html import random print_location = document[\"newyear\"] def lottery(e): num_list = random.sample(list(range(1, 50)), 6) for i in range(6): print_location <= num_list[i] + html.BR() print_location <= \"不會出現重複數字的按鈕\" + html.BR() document[\"but2\"].bind(\"click\", lottery) 恭喜中獎","tags":"Misc"},{"url":"./week-15-brython.html","title":"Week 15 Brython","text":"聖誕快樂HO~HO~HO~ 創造button功能 先設定以\"10\"為基準去評比接下來使用此網頁的人 所打的的數字比\"10\"大OR小 並將答案列在網頁上 window.onload=function(){ brython(1); } from browser import document as do from browser import html c = do[\"con\"] def compa(e): your_input = input(\"請輸入一個整數!\") # 如何判斷所輸入的整數比 10 大 if int(your_input) > 10: c <= \"所輸入的整數:\" + your_input + \"比 10 大\" + html.BR() else: c <= \"所輸入的整數:\" + your_input + \"比 10 小\" + html.BR() #print(\"test\") ''' for i in range(5): c <= \"test\" + html.BR() ''' do[\"b1\"].bind(\"click\", compa) hahahahahahahahahahaha window.onload=function(){ brython(1); } from browser import document as do from browser import html c = do[\"con\"] def compa(e): your_input = input(\"請輸入一個整數!\") # 如何判斷所輸入的整數比 10 大 if int(your_input) > 10: c <= \"所輸入的整數:\" + your_input + \"比 10 大\" + html.BR() else: c <= \"所輸入的整數:\" + your_input + \"比 10 小\" + html.BR() #print(\"test\") ''' for i in range(5): c <= \"test\" + html.BR() ''' do[\"b1\"].bind(\"click\", compa) hahahahahahahahahahaha","tags":"Misc"},{"url":"./week-14.html","title":"Week 14","text":"上課不要玩手機 就是一個創造Button的程式碼 window.onload=function(){ brython(1); } from browser import document from browser import alert def get_input(ev): the_input= input(\"請輸入\") print(\"輸入為:\"+str(the_input)) document['ch01'].bind('click',get_input) 40523142 window.onload=function(){ brython(1); } from browser import document from browser import alert def get_input(ev): the_input= input(\"請輸入\") print(\"輸入為:\"+str(the_input)) document['ch01'].bind('click',get_input) 40523142","tags":"Misc"},{"url":"./week-12-brython-hui-tu-fan-li.html","title":"Week 12 Brython 繪圖範例","text":"繪製吉他和弦 繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖 window.onload=function(){ brython(1); } from browser import document as doc import math # 準備繪圖畫布 canvas = doc[\"chord1\"] ctx = canvas.getContext(\"2d\") def background(x, y, xinc, yinc, xnum, ynum, ctx): # 水平線 for i in range(ynum+1): ctx.beginPath() # 設定線的寬度為 1 個單位 if i == 0: ctx.lineWidth = 7 else: ctx.lineWidth = 1 ctx.moveTo(x-1, y+i*yinc) ctx.lineTo(x+xnum*xinc+1, y+i*yinc) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() # 垂直線 for i in range(xnum+1): ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 ctx.moveTo(x+i*xinc, y) ctx.lineTo(x+i*xinc, y+ynum*yinc) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() def canvasText(x, y, fontSize, string, sup, sub, color, ctx): # 標定各弦音符號, 以及把位編號 ctx.beginPath() ctx.fillStyle = color ctx.strokeStyle = color #ctx.font = \"20px Arial\" ctx.font = str(fontSize)+ \"px Arial\" ctx.fillText(string, x, y) ctx.font = str(fontSize-8)+ \"px Arial\" if sup != \"\": ctx.fillText(sup, x+fontSize/1.6, y-fontSize/2) if sub != \"\": ctx.fillText(sup, x+fontSize/1.6, y) ctx.fill() ctx.stroke() ctx.closePath() w = 20 h = 30 background(100, 100, w, h, 5, 5, ctx) canvasText(100, 80, 20, \"A\", \"b\", \"\", \"black\", ctx)","tags":"Misc"},{"url":"./week-10-brython-hui-tu-fan-li.html","title":"Week 10 Brython 繪圖範例","text":"畫直線 繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖 window.onload=function(){ brython(1); } from browser import document as doc import math canvas = doc[\"japanflag1\"] ctx = canvas.getContext(\"2d\") ctx.beginPath() ctx.lineWidth = 1 inc = 5 for i in range(10): ctx.moveTo(100+i*10, 100) ctx.lineTo(100+i*10, 200) ctx.moveTo(100, 100) ctx.lineTo(150, 100) ctx.moveTo(150, 100) ctx.lineTo(150, 200) ctx.moveTo(150, 200) ctx.lineTo(100, 200) ctx.moveTo(100, 200) ctx.lineTo(100, 100) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath()","tags":"Misc"},{"url":"./xue-yuan-s40523142-wang-zhi.html","title":"學員 s40523142  網誌","text":"s40523142 超神網誌！！！ 這裡是學員s40523142第一次做的網誌 請多多見諒!!! 這個課程讓我感到非常神奇 因為以前我都不會碰到這些東西 現在知道電腦的\"命令提示字元\"可以幫助自己查到電腦的很多資訊 以及 執行一些人類自己做起來可能會花很久的事 之後的課程我一樣會好好的學習 就醬子~~~","tags":"Misc"},{"url":"./2016fall-ji-jie-she-ji-zhu-ti-jiao-xue-zhe-lao-shi-de-wang-zhi-de-dong-xi.html","title":"2016Fall 機械設計主題教學 這老師的網誌的東西","text":"知識管理與最佳化應用實驗室試圖利用計算機程式、網際內容管理、電腦輔助設計實習與協同產品設計實習等課程, 進行與機械設計相關的主題式教學, 其中包含強化創造力的教學、令學員熟習六種工程表達方式, 並且俱備融入協同設計所需要的四大面向知識與技能. 機械設計主題教學 創造力三元素, 機械設計的六種表達, 協同設計的四大面向. 強化創造能力 - 自學力、程式力與想像力 (Creative Competencies) 熟習六種表達 - 口語、文字、2D、3D、理論與實體表達 (Six Presentation Methods) 融入協同設計 - 電腦、網路、軟硬體工具與協同專案 (Collaborative Designs)","tags":"Misc"}]};